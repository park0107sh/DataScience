{"cells":[{"metadata":{"_execution_state":"idle","_uuid":"fe02f8e12f61083f3873640047fe45785a110baf","_cell_guid":"b81043ed-19e5-4c15-8661-cafffd4dc826"},"cell_type":"markdown","source":"Hello! This is my first kernel doing a simple analysis of chest locations in Fortnite.\n\nMany players, new and seasoned, are always wondering where the best drop location is at the beginning of the game. Since we have data on chest locations and chests have a higher rate of dropping better items, let's focus on that!\n\nSince this dataset is not up to date, I've pulled the most recent data from [fortnitechests.info](http://fortnitechests.info) in order to have the most effective results. However, I removed the chestNum column because I was only interested in locations."},{"metadata":{"_kg_hide-output":false,"_cell_guid":"f7d37b33-8be2-41bf-b6d7-670b317c7324","_uuid":"b103898b81123a1f99f37f1afa570a53e625c109","trusted":true,"_kg_hide-input":false},"cell_type":"code","source":"#I started out by loading the data and renaming the columns.\nlibrary(cluster)\nlibrary(dbscan)\nlibrary(FNN)\n\nmydata <- read.csv(\"../input/updated-chest-info/chestsInfo.csv\", header=TRUE)\n\n#print(head(mydata))\n\nmydata <- mydata[c(\"lng\", \"lat\")]\nnames(mydata)[1] <- \"Longitude\"\nnames(mydata)[2] <- \"Latitude\"\nprint(head(mydata))","execution_count":1,"outputs":[]},{"metadata":{"_uuid":"beb3fab83f8186bed70267cb41b0b8fe597fec33","_cell_guid":"3d120ef8-3bc5-4993-a50e-1e5f182e01a6"},"cell_type":"markdown","source":"After looking at the data, I determined that density-based clustering would provide a good view of the areas with the most chest spawn possibilities and thus, a good place to drop.\n\nIn order to cluster the data, I had to find the ideal epsilon distance and minimum number of points to satisfy the cluster. To find these values, I used k-nearest neighbors to find the distances between each chest."},{"metadata":{"_uuid":"28ae2ca6bd0691ab9904b6ee903691a2a30881ac","trusted":true,"_cell_guid":"ea8aec82-1bb4-41aa-b042-bcfd79bc5fa1"},"cell_type":"code","source":"#looking at the closest 5 chests, I may be able to get a better idea of the distance between chests\nnumNeighbors <- 5\nnearestNeighbors <- knn.dist(mydata, k=numNeighbors)\n\n#I then plotted the nearest neighbors to see if there was a clear \"knee\" in the graph\nkNNdistplot(mydata, k = numNeighbors)","execution_count":2,"outputs":[]},{"metadata":{"_uuid":"5da5c048299e803d3fb3964e8a3b6ab0f11e4ead","trusted":true,"_cell_guid":"53427731-65fd-4db0-aed8-ef25ef3dabd0"},"cell_type":"code","source":"#when there wasn't (maybe about distance = 55) a clear knee, I looked at average distances\naverageDist <- colMeans(nearestNeighbors)\nprint(averageDist)\nprint(mean(averageDist))","execution_count":3,"outputs":[]},{"metadata":{"_uuid":"88d72bbcf003762c06aa40b11ac38c151e084ec5","_cell_guid":"25162bfa-3ab5-4b59-8758-c3440335680f"},"cell_type":"markdown","source":"Now our average distance from 5 chests coincides with a possible knee in our graph. From here, we can look at the clustering using dbscan using epsilon = 55 and minPts = 5"},{"metadata":{"_uuid":"c975b97f5b8935d12599c6354b2c6febedbb4791","trusted":true,"_cell_guid":"d77d354b-0996-4f78-81ae-4ff54713b734"},"cell_type":"code","source":"# Look at chest clustering\ndensityCluster <- dbscan(mydata, eps = 55, minPts = 5)\ndensityCluster","execution_count":4,"outputs":[]},{"metadata":{"_uuid":"eb35593eafea243868c996e5fe02f34b788caa3b","_cell_guid":"6a33bafa-86b6-45ac-a22a-f48677e1cbef"},"cell_type":"markdown","source":"Judging by the size of the map and the number of players, 23 clusters seems like a pretty good estimate. Let's see what it looks like graphically."},{"metadata":{"_uuid":"1c4ab296c03908ec8ac7568e6a98184fe9c4212c","trusted":true,"_cell_guid":"0689a674-027e-4200-badd-8d736c095b18"},"cell_type":"code","source":"numClusters <- max(densityCluster$cluster)\nnoisyData <- mydata[densityCluster$cluster==0,]\nclusterPoints <- mydata[densityCluster$cluster!=0,]\nclusterNumbers <- subset(densityCluster$cluster, densityCluster$cluster!=0)\n\n#regular plot showing clusters and noise\nplot(mydata, col=densityCluster$cluster)\npoints(noisyData, pch = 3, col = \"grey\")\n\n#hullplot with cluster numbers\nhullplot(mydata, densityCluster, col = 1:numClusters, main = \"Fortnite Chest Spawn Density\")\ntext(clusterPoints, labels = clusterNumbers, cex = 0.8, pos = 2)","execution_count":6,"outputs":[]},{"metadata":{"_uuid":"eaea3ad2db085096c249ef137ec20611999b0a8c","_cell_guid":"40f1361a-fa7e-41fd-adfe-e48309ed3d6c"},"cell_type":"markdown","source":"From there, I wanted to know exactly where the best spots were according the chest spawns. So I printed the locations of each chest and well as the cluster number to an output file for review."},{"metadata":{"_uuid":"004902336e89546198cd3670bd4359b87ea65b45","trusted":true,"_cell_guid":"ae94212c-835f-48c1-bb2d-27331a2939fe"},"cell_type":"code","source":"chestClusterCount <- data.frame(seq(1,numClusters), integer(numClusters))\nnames(chestClusterCount) <- c(\"clusterID\", \"numChests\")\n\n#sink(\"clusterInfo.txt\")\nfor (clustNum in 1:numClusters)\n{\n  #print(\"-----------------------------\")\n  #cat(sprintf(\"Cluster Number: %d\\n\", clustNum))\n  for (i in 1:length(densityCluster$cluster))\n  {\n    if (densityCluster$cluster[i]==clustNum)\n    {\n      #cat(sprintf(\"%1.2f, %1.2f\\n\", mydata[i,1], mydata[i,2]))\n      chestClusterCount[clustNum, 2] <- chestClusterCount[clustNum, 2] + 1\n    }\n  }\n}\n\nchestClusterCount <- chestClusterCount[order(chestClusterCount$numChests), c(1,2)]\nprint(chestClusterCount)\n\n#sink()","execution_count":7,"outputs":[]},{"metadata":{"_uuid":"d897098a4a60d6bf20936537eb8cbcacc5333340","_cell_guid":"ad64172b-e658-468c-961a-4bb4cd4e7415"},"cell_type":"markdown","source":"After manually looking at the cluster information and the Fortnite map, I mapped out the locations corresponding to clusterID (with names that my friends and I use when there wasn't a name on the map)."},{"metadata":{"_uuid":"c10e54e1b3b7d3e706f983b490a6b895b45878d9","trusted":true,"_cell_guid":"79bb4f0d-484a-4b86-bc53-7dc06ca46f8a"},"cell_type":"code","source":"read.table(\"../input/final-cluster-info/clusterInfoWithNames.txt\", sep=\"\\t\", \n           col.names=c(\"clusterId\", \"clusterName\", \"numChests\"), \n           fill=FALSE, \n           strip.white=TRUE)","execution_count":8,"outputs":[]},{"metadata":{"_uuid":"5de18c2c661ef00a1debc07e593ff3984e84872f"},"cell_type":"markdown","source":"And that's that! Please let me know any suggestions you might have for this kernel or for future ones. I'm still learning so any and all help is appreciated. Hope this analysis will help you drop in better places and get that Victory Royale!"}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}